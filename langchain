from langchain.document_loaders.csv_loader import CSVLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.embeddings import VertexAIEmbeddings#deprecated
from langchain_google_vertexai import VertexAIEmbeddings#updated
from langchain.vectorstores import Pinecone
from langchain.vectorstores import FAISS
from langchain.chains import ConversationalRetrievalChain
from langchain.memory import ConversationBufferMemory
import sys
import pandas as pd
a=pd.read_csv('transc_sum_v1.csv')
a.head(2)
loader=CSVLoader(file_path='only_trans.csv',encoding='utf-8',csv_args={'delimiter':','})
data=loader.load()
Request_per_min=560
embeddings=VertexAIEmbeddings(requests_per_minute=Request_per_min)
DB_FAISS='VectorStore/db_faiss_3'
docsearch=FAISS.from_documents(text_chunks,embeddings)
docsearch.save_local(DB_FAISS)
from langchain.llms import VertexAI
llm=VertexAI(model_name='text-bison-32k',maximum_output_tokens=8000,tempearature=0.2,top_p=0.8,top_k=40,verbose=True)
import sys
qa = ConversationalRetrievalChain.from_llm(llm, retriever=docsearch.as_retriever())
while True:
  chat_history = []
  query = input(f"Input Prompt: ")
  if query == 'exit':
    print('Exiting')
    sys.exit()
  if query == '':
    continue
  result = qa({"question":query, "chat_history":chat_history})
  print("Response: ", result['answer'])
This is my code execution has no problem but the problem  is the output. Ill show it below
Input Prompt:  Generated top 10 recurring issues discussed in the calls and the count and also give me the fixes given on the that call if not means give not solved
Response:   **Top 10 Recurring Issues:**
1. **ONT/ONU not linking/registering with OLT (12 instances):**
   - **Fixes:**
     - Verify LCP and ensure it's in the right place.
     - Swap the ONT.
     - Check for outages and add a note to the outage ticket if necessary.
2. **No internet connectivity/No ping (5 instances):**
   - **Fixes:**
     - Reset the ONT and DPU.
     - Check operational state and ensure it's not down.
     - Create a
See the output is not fully completed the llm has working good it has potential problem is in retrieval chain



query="""SELECT WIP.*,
    CASE 
        WHEN MD_counts.onnet_count > 0 THEN 'Yes' ELSE 'No' 
    END as 'onnet',COALESCE(MD_counts.onnet_count, 0) as onnet_count
FROM 
    (SELECT *, COUNT(*) OVER(PARTITION BY primary_order_item) as total_count
    FROM [DASH].[VW_TASK_DATA_WIP_ORDER] 
    WHERE START_DATE >= GETDATE() - 20 AND order_status = 'Installed' AND Product_Category ='IP') as WIP
INNER JOIN
    (SELECT SRVC_ORDER_UNIT, COUNT(*) as onnet_count
    FROM [DASH].MEASURED_DATA
    WHERE ACCESS_METHOD = 'On-Net'
    GROUP BY SRVC_ORDER_UNIT) as MD_counts
ON 
    WIP.primary_order_item = MD_counts.SRVC_ORDER_UNIT"""


query_1 = (select * from  [SRVC_DLVR].[DASH].[WIP_ORDER_BLOCKER]  where blk_seq=1) as WIP_BLOCKER
ON WIP.primary_order_item = WIP_BLOCKER.PRIMARY_ORDER_ITEM

cursor.execute(query, query_1)


