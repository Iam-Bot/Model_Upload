from langchain.document_loaders.csv_loader import CSVLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.embeddings import VertexAIEmbeddings#deprecated
from langchain_google_vertexai import VertexAIEmbeddings#updated
from langchain.vectorstores import Pinecone
from langchain.vectorstores import FAISS
from langchain.chains import ConversationalRetrievalChain
from langchain.memory import ConversationBufferMemory
import sys
import pandas as pd
a=pd.read_csv('transc_sum_v1.csv')
a.head(2)
loader=CSVLoader(file_path='only_trans.csv',encoding='utf-8',csv_args={'delimiter':','})
data=loader.load()
Request_per_min=560
embeddings=VertexAIEmbeddings(requests_per_minute=Request_per_min)
DB_FAISS='VectorStore/db_faiss_3'
docsearch=FAISS.from_documents(text_chunks,embeddings)
docsearch.save_local(DB_FAISS)
from langchain.llms import VertexAI
llm=VertexAI(model_name='text-bison-32k',maximum_output_tokens=8000,tempearature=0.2,top_p=0.8,top_k=40,verbose=True)
import sys
qa = ConversationalRetrievalChain.from_llm(llm, retriever=docsearch.as_retriever())
while True:
  chat_history = []
  query = input(f"Input Prompt: ")
  if query == 'exit':
    print('Exiting')
    sys.exit()
  if query == '':
    continue
  result = qa({"question":query, "chat_history":chat_history})
  print("Response: ", result['answer'])
This is my code execution has no problem but the problem  is the output. Ill show it below
Input Prompt:  Generated top 10 recurring issues discussed in the calls and the count and also give me the fixes given on the that call if not means give not solved
Response:   **Top 10 Recurring Issues:**
1. **ONT/ONU not linking/registering with OLT (12 instances):**
   - **Fixes:**
     - Verify LCP and ensure it's in the right place.
     - Swap the ONT.
     - Check for outages and add a note to the outage ticket if necessary.
2. **No internet connectivity/No ping (5 instances):**
   - **Fixes:**
     - Reset the ONT and DPU.
     - Check operational state and ensure it's not down.
     - Create a
See the output is not fully completed the llm has working good it has potential problem is in retrieval chain



import pandas as pd

# Sample DataFrames
df1 = pd.DataFrame({'key': ['A', 'B', 'C'], 'value_df1': [1, 2, 3], 'common_col': [10, 11, 12]})
df2 = pd.DataFrame({'key': ['A', 'B', 'D'], 'value_df2': [4, 5, 6], 'common_col': [20, 21, 22]})

# Merge the DataFrames based on 'key' with left join
merged_df = pd.merge(df1, df2, on='key', how='left', suffixes=('_df1', '_df2'))

# Concatenate common columns
common_cols = [col for col in df1.columns if col in df2.columns and col != 'key']
for col in common_cols:
    merged_df[col] = merged_df[col + '_df1'].combine_first(merged_df[col + '_df2'])
    merged_df.drop(columns=[col + '_df1', col + '_df2'], inplace=True)

# Print the merged DataFrame
print(merged_df)

